"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __importDefault(require("lodash"));
var errorMessages_1 = __importDefault(require("../../libs/constants/errorMessages"));
var respond_1 = __importDefault(require("../../utils/respond"));
var request_1 = __importDefault(require("../../utils/request"));
function default_1(uploadOptions, defaultOptions, callback) {
    if (!lodash_1.default.isObject(uploadOptions)) {
        respond_1.default(true, errorMessages_1.default.MISSING_UPLOAD_DATA, callback);
        return;
    }
    if (!uploadOptions.file) {
        respond_1.default(true, errorMessages_1.default.MISSING_UPLOAD_FILE_PARAMETER, callback);
        return;
    }
    if (!uploadOptions.fileName) {
        respond_1.default(true, errorMessages_1.default.MISSING_UPLOAD_FILENAME_PARAMETER, callback);
        return;
    }
    var formData = {};
    var key;
    for (key in uploadOptions) {
        if (key) {
            if (key == "file" && typeof uploadOptions.file != "string") {
                formData.file = {
                    value: uploadOptions.file,
                    options: {
                        filename: uploadOptions.fileName,
                        contentType: null,
                    },
                };
            }
            else if (key == "tags" && Array.isArray(uploadOptions.tags)) {
                formData.tags = uploadOptions.tags.join(",");
            }
            else {
                formData[key] = String(uploadOptions[key]);
            }
        }
    }
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/upload",
        method: "POST",
        formData: formData,
        json: true,
    };
    request_1.default(requestOptions, defaultOptions, callback);
}
exports.default = default_1;
